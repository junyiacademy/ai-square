steps:
# Step 1: Build Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'Dockerfile.production', '-t', 'gcr.io/$PROJECT_ID/ai-square-production:${_IMAGE_TAG}', '.']

# Step 2: Push image to registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/ai-square-production:${_IMAGE_TAG}']

# Step 3: Deploy to Cloud Run with ALL required environment variables
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
  - 'run'
  - 'deploy'
  - 'ai-square-production'
  - '--image=gcr.io/$PROJECT_ID/ai-square-production:${_IMAGE_TAG}'
  - '--region=asia-east1'
  - '--platform=managed'
  - '--allow-unauthenticated'
  - '--timeout=60'
  - '--memory=512Mi'
  - '--cpu=1'
  - '--port=3000'
  - '--service-account=ai-square-production@ai-square-463013.iam.gserviceaccount.com'
  - '--add-cloudsql-instances=ai-square-463013:asia-east1:ai-square-db-production'
  - '--set-env-vars=NODE_ENV=production'
  - '--set-env-vars=GOOGLE_CLOUD_PROJECT=ai-square-463013'
  - '--set-env-vars=GCP_PROJECT_ID=ai-square-463013'
  - '--set-env-vars=VERTEX_AI_PROJECT=ai-square-463013'
  - '--set-env-vars=VERTEX_AI_LOCATION=us-central1'
  - '--set-env-vars=VERTEX_AI_MODEL=gemini-2.5-flash'
  - '--set-env-vars=VERTEX_AI_KEY=${_VERTEX_AI_KEY}'
  - '--set-env-vars=NEXTAUTH_URL=https://ai-square-production-731209836128.asia-east1.run.app'
  - '--set-env-vars=DB_HOST=/cloudsql/ai-square-463013:asia-east1:ai-square-db-production'
  - '--set-env-vars=DB_NAME=ai_square_db'
  - '--set-env-vars=DB_USER=postgres'
  - '--set-env-vars=REDIS_ENABLED=false'
  - '--set-env-vars=DB_PASSWORD=${_DB_PASSWORD}'
  - '--set-env-vars=NEXTAUTH_SECRET=${_NEXTAUTH_SECRET}'
  - '--set-env-vars=DATABASE_URL=${_DATABASE_URL}'
  - '--no-traffic'  # Deploy without routing traffic immediately

# Step 4: Run health check
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # Get the new revision URL
    REVISION_URL=$(gcloud run revisions list --service=ai-square-production --region=asia-east1 --platform=managed --limit=1 --format="value(status.url)")
    echo "Testing new revision: $${REVISION_URL}"
    
    # Health check
    for i in {1..30}; do
      if curl -sf "$${REVISION_URL}/api/health" > /dev/null; then
        echo "âœ… Health check passed!"
        break
      fi
      echo "Waiting for service to be ready... ($$i/30)"
      sleep 10
    done

# Step 5: Promote traffic to new revision
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
  - 'run'
  - 'services'
  - 'update-traffic'
  - 'ai-square-production'
  - '--to-latest'
  - '--region=asia-east1'

images:
- 'gcr.io/$PROJECT_ID/ai-square-production:${_IMAGE_TAG}'

substitutions:
  _IMAGE_TAG: 'latest'
  _DB_PASSWORD: '${DB_PASSWORD}'
  _NEXTAUTH_SECRET: '${NEXTAUTH_SECRET}'
  _DATABASE_URL: '${DATABASE_URL}'
  _VERTEX_AI_KEY: '${VERTEX_AI_KEY}'

options:
  logging: CLOUD_LOGGING_ONLY