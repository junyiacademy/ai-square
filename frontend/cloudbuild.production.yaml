steps:
# Step 1: Build Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'Dockerfile.production', '-t', 'gcr.io/$PROJECT_ID/ai-square-production:${_IMAGE_TAG}', '.']

# Step 2: Push image to registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/ai-square-production:${_IMAGE_TAG}']

# Step 3: Deploy to Cloud Run (CRITICAL - 避免人為疏失)
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
  - 'run'
  - 'deploy'
  - 'ai-square-production'
  - '--image=gcr.io/$PROJECT_ID/ai-square-production:${_IMAGE_TAG}'
  - '--region=asia-east1'
  - '--platform=managed'
  - '--no-traffic'  # Deploy without routing traffic immediately

# Step 4: Run health check
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # Get the new revision URL
    REVISION_URL=$(gcloud run revisions list --service=ai-square-production --region=asia-east1 --platform=managed --limit=1 --format="value(status.url)")
    echo "Testing new revision: $${REVISION_URL}"
    
    # Health check
    for i in {1..30}; do
      if curl -sf "$${REVISION_URL}/api/health" > /dev/null; then
        echo "✅ Health check passed!"
        break
      fi
      echo "Waiting for service to be ready... ($$i/30)"
      sleep 10
    done

# Step 5: Promote traffic to new revision
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
  - 'run'
  - 'services'
  - 'update-traffic'
  - 'ai-square-production'
  - '--to-latest'
  - '--region=asia-east1'

images:
- 'gcr.io/$PROJECT_ID/ai-square-production:${_IMAGE_TAG}'

substitutions:
  _IMAGE_TAG: 'latest'

options:
  logging: CLOUD_LOGGING_ONLY