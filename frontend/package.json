{
  "name": "frontend",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:unit": "jest --testPathIgnorePatterns='/tests/integration/|/e2e/' --watchAll=false",
    "test:unit:ci": "jest --ci --coverage --testPathIgnorePatterns='/tests/integration/|/e2e/' --watchAll=false",
    "test:integration:ci": "jest --config jest.integration.config.js --ci --runInBand --forceExit",
    "pre-commit-check": "npm run typecheck && npm run lint && npm run test:unit:ci",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:chrome": "playwright test --project=chromium",
    "test:e2e:firefox": "playwright test --project=firefox",
    "test:e2e:webkit": "playwright test --project=webkit",
    "test:e2e:sequential": "playwright test --workers=1",
    "test:integration": "jest --config jest.integration.config.js --runInBand --forceExit",
    "test:integration:setup": "bash scripts/test-environment.sh",
    "test:integration:docker": "bash scripts/test-integration.sh",
    "test:integration:watch": "docker-compose -f docker-compose.test.yml up -d && jest --config jest.integration.config.js --watch",
    "test:integration:coverage": "jest --config jest.integration.config.js --coverage",
    "test:integration:flows": "jest --config jest.integration.config.js tests/integration/flows",
    "test:integration:cache": "jest --config jest.integration.config.js tests/integration/cache",
    "test:integration:performance": "jest --config jest.integration.config.js tests/integration/performance",
    "test:integration:level-1": "jest --config jest.integration.config.js tests/integration/level-1-basic --runInBand --forceExit",
    "test:integration:level-2": "jest --config jest.integration.config.js tests/integration/level-2-simple --runInBand --forceExit",
    "test:integration:level-3": "jest --config jest.integration.config.js tests/integration/level-3-advanced --runInBand --forceExit",
    "test:integration:basic": "npm run test:integration:level-1",
    "test:integration:simple": "npm run test:integration:level-1 && npm run test:integration:level-2",
    "test:integration:advanced": "npm run test:integration:simple && npm run test:integration:level-3",
    "test:all": "npm run test:ci && npm run test:e2e",
    "test:complete": "npm run test:ci && npm run test:integration && npm run test:e2e",
    "quality-check": "npm run lint && npm run test:all",
    "slack:test": "npx tsx scripts/test-slack-webhook.ts",
    "report:ceo": "npx tsx scripts/dynamic-ceo-report.ts",
    "report:ceo:dry": "npx tsx scripts/dynamic-ceo-report.ts --dry-run",
    "report:dev": "npx tsx scripts/dynamic-dev-tracker.ts",
    "dev:session:start": "npx tsx scripts/dynamic-dev-tracker.ts -- --start-session",
    "dev:session:end": "npx tsx scripts/dynamic-dev-tracker.ts -- --end-session",
    "typecheck": "npx tsc --noEmit",
    "typecheck:safe": "npx tsc --noEmit && npm run test:ci && npm run build",
    "fix:typescript-safe": "node scripts/safe-typescript-fix.js",
    "fix:typescript-validate": "node scripts/safe-typescript-fix.js --validate",
    "validate-content": "tsx scripts/validate-content.ts",
    "validate": "tsx scripts/validate-content-simple.ts",
    "translation:setup": "node scripts/batch-translation-setup.js",
    "translation:batch": "node scripts/batch-translate-with-service.js",
    "data:sync": "node scripts/sync-yaml-json.js y2j",
    "data:reverse-sync": "node scripts/sync-yaml-json.js j2y",
    "data:watch": "node scripts/sync-yaml-json.js watch",
    "data:setup": "node scripts/setup-hybrid-data-workflow.js",
    "migrate:verify": "tsx src/scripts/verify-migration.ts",
    "commit": "./scripts/smart-commit.sh",
    "push": "./scripts/smart-push.sh",
    "push:force": "git push origin main --no-verify",
    "commit:force": "git commit --no-verify",
    "smart-git": "./scripts/smart-git.sh",
    "sg": "./scripts/smart-git.sh",
    "db:health": "tsx src/scripts/check-db-health.ts",
    "data:convert": "node scripts/yaml-json-crud-system.js convert",
    "data:crud": "node scripts/yaml-json-crud-system.js",
    "test:all-modes": "tsx src/scripts/test-all-modes-e2e.ts",
    "init:scenarios": "tsx src/scripts/initialize-scenarios.ts",
    "init:scenarios:staging": "tsx src/scripts/initialize-scenarios-staging.ts",
    "db:up": "docker-compose -f docker-compose.postgres.yml up -d",
    "db:down": "docker-compose -f docker-compose.postgres.yml down",
    "db:logs": "docker-compose -f docker-compose.postgres.yml logs -f",
    "staging:deploy": "bash scripts/deploy-staging.sh",
    "staging:migrate": "bash scripts/migrate-staging-db.sh",
    "staging:cleanup": "bash scripts/cleanup-staging.sh",
    "staging:logs": "gcloud logs tail --project=${GOOGLE_CLOUD_PROJECT}",
    "staging:connect": "gcloud sql connect ai-square-db-staging --user=postgres --project=${GOOGLE_CLOUD_PROJECT}",
    "populate-staging-scenarios": "tsx src/scripts/populate-staging-scenarios.ts",
    "populate-staging-direct": "tsx src/scripts/populate-staging-scenarios-direct.ts",
    "populate-all-yaml": "tsx src/scripts/populate-all-yaml-scenarios.ts"
  },
  "dependencies": {
    "@google-cloud/storage": "^7.16.0",
    "@google-cloud/translate": "^9.2.0",
    "@google-cloud/vertexai": "^1.10.0",
    "@google/generative-ai": "^0.24.1",
    "@monaco-editor/react": "^4.7.0",
    "@slack/web-api": "^7.9.3",
    "@tailwindcss/typography": "^0.5.16",
    "@types/d3": "^7.4.3",
    "@types/nodemailer": "^6.4.17",
    "@types/uuid": "^10.0.0",
    "chalk": "^5.4.1",
    "chart.js": "^4.5.0",
    "commander": "^14.0.0",
    "d3": "^7.9.0",
    "dotenv": "^17.2.0",
    "framer-motion": "^12.23.0",
    "google-auth-library": "^10.1.0",
    "i18next": "^25.2.1",
    "jose": "^6.0.11",
    "js-yaml": "^4.1.0",
    "lucide-react": "^0.525.0",
    "next": "15.3.3",
    "next-i18next": "^15.4.2",
    "nodemailer": "^7.0.5",
    "ora": "^8.1.1",
    "p-limit": "^6.1.0",
    "pg": "^8.16.3",
    "react": "^19.0.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^19.0.0",
    "react-i18next": "^15.5.3",
    "react-markdown": "^10.1.0",
    "react-resizable-panels": "^3.0.3",
    "recharts": "^3.0.0",
    "remark-gfm": "^4.0.1",
    "uuid": "^11.1.0",
    "yaml": "^2.8.0",
    "zod": "^3.25.67"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@next/bundle-analyzer": "^15.3.4",
    "@playwright/test": "^1.53.1",
    "@swc/jest": "^0.2.39",
    "@tailwindcss/postcss": "^4.1.11",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/bcryptjs": "^2.4.6",
    "@types/ioredis": "^4.28.10",
    "@types/jest": "^30.0.0",
    "@types/js-yaml": "^4.0.9",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^20",
    "@types/node-fetch": "^2.6.13",
    "@types/pg": "^8.11.10",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/supertest": "^6.0.3",
    "@types/wait-on": "^5.3.4",
    "autoprefixer": "^10.4.21",
    "bcryptjs": "^3.0.2",
    "eslint": "^9",
    "eslint-config-next": "15.3.3",
    "glob": "^11.0.3",
    "ioredis": "^5.7.0",
    "jest": "^30.0.2",
    "jest-environment-jsdom": "^30.0.2",
    "jest-extended": "^6.0.0",
    "jsonwebtoken": "^9.0.2",
    "postcss": "^8.5.5",
    "supertest": "^7.1.4",
    "tailwindcss": "^4.1.11",
    "tsx": "^4.20.3",
    "typescript": "^5",
    "wait-on": "^8.0.4"
  }
}
