#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

cd frontend

# ===========================================
# Pre-push Hook - CI/CD Protection
# Goal: Prevent CI/CD failures (< 30 seconds)
# ===========================================

echo "🚀 Running pre-push validation..."
echo "   (This prevents CI/CD failures)"

# 1. Full TypeScript check
echo "🔍 TypeScript check (full project)..."
npm run typecheck
if [ $? -ne 0 ]; then
  echo "❌ TypeScript errors found. Please fix before pushing."
  echo "💡 Run 'npm run typecheck' to see all errors"
  exit 1
fi

# 2. Full ESLint check
echo "📋 ESLint check (full project)..."
npm run lint
if [ $? -ne 0 ]; then
  echo "❌ ESLint errors found. Please fix before pushing."
  echo "💡 Run 'npm run lint' to see all errors"
  exit 1
fi

# 3. Critical tests - API routes only (fast)
echo "🧪 Running API tests (~5 seconds)..."
npm test -- src/app/api --bail --silent 2>/dev/null
if [ $? -ne 0 ]; then
  echo "❌ API tests failed. Please fix before pushing."
  echo "💡 Run 'npm test src/app/api' to see failing tests"
  exit 1
fi

# 4. Optional: Full build check (can be skipped with --no-build flag)
if [ "$1" != "--no-build" ]; then
  echo "🏗️  Build validation (~35 seconds)..."
  echo "   (Skip with: git push --no-build)"
  npm run build > /dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "❌ Build failed. Please fix before pushing."
    echo "💡 Run 'npm run build' to see build errors"
    exit 1
  fi
else
  echo "⚠️  Skipping build check (--no-build flag used)"
fi

echo "✅ All pre-push checks passed!"
echo "🎯 Pushing to remote... CI/CD should pass!"

# Optional: Show what will be pushed
echo ""
echo "📦 Commits to be pushed:"
git log --oneline @{u}..HEAD | head -5
echo ""