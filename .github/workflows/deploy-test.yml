name: Test Deployment Pipeline

on:
  push:
    branches:
      - staging
  workflow_dispatch:

env:
  PROJECT_ID: ai-square-463013
  REGION: asia-east1

jobs:
  # ============================================
  # 1. Basic Tests (no external dependencies)
  # ============================================
  test:
    name: Basic Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Run TypeScript check
        working-directory: frontend
        run: npx tsc --noEmit
        
      - name: Build application
        working-directory: frontend
        run: npm run build
        
      - name: Test build output
        working-directory: frontend
        run: |
          echo "Testing build outputs..."
          ls -la .next/
          echo "✅ Build completed successfully"

  # ============================================
  # 2. Test Authentication (without deployment)
  # ============================================
  test-auth:
    name: Test Authentication
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Test auth setup
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        
      - name: Test gcloud
        run: |
          echo "Testing gcloud authentication..."
          gcloud auth list
          gcloud config list
          echo "✅ Authentication test completed"
          
      - name: Test Docker setup  
        run: |
          echo "Testing Docker setup..."
          gcloud auth configure-docker
          echo "✅ Docker setup completed"

  # ============================================
  # 3. Notify results
  # ============================================
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, test-auth]
    if: always()
    
    steps:
      - name: Notify Slack
        run: |
          if [ -n "${{ secrets.SLACK_WEBHOOK }}" ]; then
            STATUS="${{ needs.test-auth.result }}"
            if [ "$STATUS" = "success" ]; then
              MESSAGE="✅ Test deployment pipeline successful! Ready for staging deployment."
            else
              MESSAGE="❌ Test deployment pipeline failed. Status: $STATUS"
            fi
            
            curl -X POST "${{ secrets.SLACK_WEBHOOK }}" \
              -H 'Content-type: application/json' \
              -d "{\"text\":\"$MESSAGE\"}"
          else
            echo "Slack webhook not configured, skipping notification"
          fi